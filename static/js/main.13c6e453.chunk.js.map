{"version":3,"sources":["assets/images/logo.png","logo.svg","assets/images sync /^/.//.*$","assets/images/advanced_features.png","assets/images/bucket_policy.png","assets/images/bucket_properties.png","assets/images/create_bucket.png","assets/images/create_bucket_dialog.png","assets/images/create_bucket_permissions.png","assets/images/create_bucket_review.png","assets/images/create_hosted_zone.png","assets/images/create_hosted_zone_pane.png","assets/images/custom_nameservers.png","assets/images/edit_typeA_record.png","assets/images/godaddy_custom.png","assets/images/godaddy_nameservers.png","assets/images/hosted_zone_nameservers.png","assets/images/manage_dns.png","assets/images/ns_soa_records.png","assets/images/refresh_records.png","assets/images/route53_get_started.png","assets/images/search_route53.png","assets/images/search_s3.png","assets/images/sw_upload_files.png","components/Header/Header.jsx","components/NotFound/NotFound.jsx","components/ContentLayout/ContentLayout.jsx","components/Footer/Footer.jsx","components/Title/Title.jsx","components/HLine/HLine.jsx","assets/utils/markupFinder.js","components/LinkButton/LinkButton.jsx","components/Descriptions/Descriptions.jsx","data/index.js","components/Home/Home.jsx","components/Image/Image.jsx","components/PreCode/PreCode.jsx","components/Step/Step.jsx","components/Steps/Steps.jsx","components/Content/Content.jsx","components/PostsMaster/index.js","components/App/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./advanced_features.png","./bucket_policy.png","./bucket_properties.png","./create_bucket.png","./create_bucket_dialog.png","./create_bucket_permissions.png","./create_bucket_review.png","./create_hosted_zone.png","./create_hosted_zone_pane.png","./custom_nameservers.png","./edit_typeA_record.png","./godaddy_custom.png","./godaddy_nameservers.png","./hosted_zone_nameservers.png","./logo.png","./manage_dns.png","./ns_soa_records.png","./refresh_records.png","./route53_get_started.png","./search_route53.png","./search_s3.png","./sw_upload_files.png","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","Header_Header","props","react_default","a","createElement","className","href","src","require","alt","NotFound","logo","Component","ContentLayout_ContentLayout","children","Footer_Footer","Title_Title","title","publishedOn","isAtHome","reversedDate","split","reverse","join","redirectedURL","concat","dateTimeString","Date","displayDate","getMonth","getDate","getFullYear","Fragment","key","react_router_dom","to","HLine_HLine","MarkupFinder","classCallCheck","this","charInterpreter","text","bolds","codes","anchors","i","length","push","markupChars","displayText","includes","indexOf","textSubStr","substring","hrefDisplayTextEndIndex","hrefTextEndIndex","hrefText","decodeURIComponent","encodeURIComponent","LinkButton_LinkButton","markupFinderInstance","Descriptions","_this$props","descriptions","postIndex","renderedDescriptions","slice","description","_this$props2","forEach","document","getElementsByClassName","innerHTML","data","tech_posts","published_on","steps","media_type","media_src","Home","posts_data","_ref","components_Descriptions_Descriptions","Image","mediaSrc","altText","PreCode","Step","_this$props$step","step","stepIndex","Steps_Steps","components_Step_Step","Content","PostsMaster","postComponents","tech_post","objectSpread","defineProperty","_props$postData","postData","App","Post30032019","Post31032019","react_router","path","exact","component","render","components_NotFound_NotFound","Boolean","window","location","hostname","match","ReactDOM","components_App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13c6e453.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.747b7f03.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","var map = {\n\t\"./advanced_features.png\": 50,\n\t\"./bucket_policy.png\": 51,\n\t\"./bucket_properties.png\": 52,\n\t\"./create_bucket.png\": 53,\n\t\"./create_bucket_dialog.png\": 54,\n\t\"./create_bucket_permissions.png\": 55,\n\t\"./create_bucket_review.png\": 56,\n\t\"./create_hosted_zone.png\": 57,\n\t\"./create_hosted_zone_pane.png\": 58,\n\t\"./custom_nameservers.png\": 59,\n\t\"./edit_typeA_record.png\": 60,\n\t\"./godaddy_custom.png\": 61,\n\t\"./godaddy_nameservers.png\": 62,\n\t\"./hosted_zone_nameservers.png\": 63,\n\t\"./logo.png\": 19,\n\t\"./manage_dns.png\": 64,\n\t\"./ns_soa_records.png\": 65,\n\t\"./refresh_records.png\": 66,\n\t\"./route53_get_started.png\": 67,\n\t\"./search_route53.png\": 68,\n\t\"./search_s3.png\": 69,\n\t\"./sw_upload_files.png\": 70\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 49;","module.exports = __webpack_public_path__ + \"static/media/advanced_features.1f39373d.png\";","module.exports = __webpack_public_path__ + \"static/media/bucket_policy.2028dc27.png\";","module.exports = __webpack_public_path__ + \"static/media/bucket_properties.bcd3543a.png\";","module.exports = __webpack_public_path__ + \"static/media/create_bucket.8f20b9ea.png\";","module.exports = __webpack_public_path__ + \"static/media/create_bucket_dialog.59bb8361.png\";","module.exports = __webpack_public_path__ + \"static/media/create_bucket_permissions.5dce48bd.png\";","module.exports = __webpack_public_path__ + \"static/media/create_bucket_review.462810c2.png\";","module.exports = __webpack_public_path__ + \"static/media/create_hosted_zone.82b42751.png\";","module.exports = __webpack_public_path__ + \"static/media/create_hosted_zone_pane.74141634.png\";","module.exports = __webpack_public_path__ + \"static/media/custom_nameservers.de6a8c3f.png\";","module.exports = __webpack_public_path__ + \"static/media/edit_typeA_record.2cc43c09.png\";","module.exports = __webpack_public_path__ + \"static/media/godaddy_custom.e3dec82c.png\";","module.exports = __webpack_public_path__ + \"static/media/godaddy_nameservers.aff27221.png\";","module.exports = __webpack_public_path__ + \"static/media/hosted_zone_nameservers.bd5fe5cf.png\";","module.exports = __webpack_public_path__ + \"static/media/manage_dns.1c26f25f.png\";","module.exports = __webpack_public_path__ + \"static/media/ns_soa_records.c8a45ac2.png\";","module.exports = __webpack_public_path__ + \"static/media/refresh_records.888dc0d9.png\";","module.exports = __webpack_public_path__ + \"static/media/route53_get_started.0645f610.png\";","module.exports = __webpack_public_path__ + \"static/media/search_route53.7767d5e8.png\";","module.exports = __webpack_public_path__ + \"static/media/search_s3.22ba40bb.png\";","module.exports = __webpack_public_path__ + \"static/media/sw_upload_files.493f200c.png\";","import React from 'react';\nimport './Header.scss';\n\nexport default props => (\n    <header className=\"header\">\n        <a href=\"/\">\n            <img src={require('../../assets/images/logo.png')} alt=\"monjit nunisa logo\" className=\"logo\" />\n        </a>\n        <a href=\"/\">\n            <span className=\"header__text\">Monjit Nunisa</span>\n        </a>\n    </header>\n);\n","import React, { Component } from 'react';\nimport logo from '../../logo.svg';\nimport './NotFound.scss';\n\nclass NotFound extends Component {\n    render() {\n        return (\n            <div className=\"notfound\">\n                <header className=\"notfound-header\">\n                    <img src={logo} className=\"notfound-logo\" alt=\"logo\" />\n                    <p>\n                        OMG! I'm still spinning hard to serve your request...\n                    </p>\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport './ContentLayout.scss';\n\nexport default props => (\n    <main className=\"wrapper\">\n        <section className=\"content pt-15\">\n            {props.children}\n        </section>\n    </main>\n);\n","import React from 'react';\nimport './Footer.scss';\n\nexport default props => (\n    <footer className=\"footer\">\n        Since 2019 &copy; nunisa\n    </footer>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Title.scss';\n\nexport default props => {\n    const { title, publishedOn, isAtHome } = props;\n    const reversedDate = publishedOn.split('/').reverse().join('/'); // DD/MM/YYY CHANGED TO YYYY/MM/DD\n    const redirectedURL = `/${reversedDate}/${title.split(' ').join('-')}`;\n    // DATE STRING CALCULATION\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const dateTimeString = new Date(reversedDate);\n    const displayDate = `${months[dateTimeString.getMonth()]} ${dateTimeString.getDate()}, ${dateTimeString.getFullYear()}`;\n\n    return (\n        <React.Fragment key={publishedOn}>\n            {isAtHome ? <Link key={publishedOn} to={redirectedURL}>{title}</Link> : <h2>{title}</h2>}\n            <p className=\"p-text--title\"><small>{`Published on ${displayDate}`}</small></p>\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport './HLine.scss';\n\nexport default props => {\n    return (\n        <div className=\"hline mt-30\">\n            <div className=\"line bb-2\" />\n        </div>\n    );\n};\n","export default class MarkupFinder {\n    constructor() { }\n\n    // CHARACTER INTERPRETATION\n    charInterpreter = text => {\n        // COLLECT HTML MARKUPs\n        const bolds = [];\n        // const italics = []; // TODO: Subject to be supported\n        const codes = [];\n        const anchors = [];\n        // PARSE & LOOKUP FOR MARKUPs\n        for (let i = 0; i < text.length; i++) {\n            if (text[i] === '*') {\n                let twoChars = text[i] + '' + text[i + 1];\n                if (twoChars === '**') {\n                    bolds.push(i);\n                }\n            }\n            // else if (text[i] === '_') {\n            //     italics.push(i);\n            // } \n            else if (text[i] === '`') {\n                codes.push(i);\n            } else if (text[i] === '[' || text[i] === ']') {\n                anchors.push(i);\n            }\n        }\n        // MARKUPed TEXT\n        const markupChars = ['*', '`', '[', ']']; //  '_', TODO: Subject to be supported\n        let displayText = '';\n        for (let i = 0; i < text.length; i++) {\n            if (bolds.includes(i) && (bolds.indexOf(i) % 2) === 0) {\n                displayText += '<strong>';\n                i++;\n            } else if (bolds.includes(i)) {\n                displayText += '</strong>';\n                i++;\n            }\n            // if (italics.includes(i) && (italics.indexOf(i) % 2) === 0) {\n            //     displayText += '<i>';\n            // } else if (italics.includes(i)) {\n            //     displayText += '</i>';\n            // }\n            if (codes.includes(i) && (codes.indexOf(i) % 2) === 0) {\n                displayText += '<code>';\n            } else if (codes.includes(i)) {\n                displayText += '</code>';\n            }\n            if (anchors.includes(i) && (anchors.indexOf(i) % 2) === 0) {\n                const textSubStr = text.substring(i + 1);\n                const hrefDisplayTextEndIndex = textSubStr.indexOf(']');\n                const hrefTextEndIndex = textSubStr.indexOf(')');\n                const hrefText = textSubStr.substring(hrefDisplayTextEndIndex + 2, hrefTextEndIndex);\n                displayText += `<a href=\"${hrefText}\">`;\n            } else if (anchors.includes(i)) {\n                displayText += '</a>';\n                const textSubStr = text.substring(i + 2);\n                const hrefTextEndIndex = textSubStr.indexOf(')');\n                const hrefText = text.substring(2, hrefTextEndIndex);\n                i += hrefText.length + 4;\n                continue;\n            }\n            if (!markupChars.includes(text[i])) {\n                displayText += text[i];\n            }\n        }\n        // ENDCODE & DECODE FOR SPECIAL CHARACTERS\n        return decodeURIComponent(encodeURIComponent(displayText));\n    };\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './LinkButton.scss';\n\nexport default props => (\n    <Link className=\"btn-inline--link\" to={props.redirectedURL}>\n        Read More\n        <span>&rarr;</span>\n    </Link>\n);\n","import React, { Component } from 'react';\nimport MarkupFinder from '../../assets/utils/markupFinder';\nimport LinkButton from '../LinkButton/LinkButton.jsx';\nimport './Descriptions.scss';\n\nconst markupFinderInstance = new MarkupFinder();\n\nclass Descriptions extends Component {\n    render() {\n        const { descriptions, redirectedURL, isAtHome, postIndex } = this.props;\n        const renderedDescriptions = isAtHome\n            ? descriptions.slice(0, 1)\n            : descriptions;\n\n        return (\n            <React.Fragment>\n                {\n                    renderedDescriptions.map((description, i) => (\n                        <p className={isAtHome ? `p-text-${postIndex}` : `p-text`} key={`${i}-d`} />\n                    ))\n                }\n                {\n                    isAtHome\n                        ? <LinkButton redirectedURL={redirectedURL} />\n                        : null\n                }\n            </React.Fragment>\n        );\n    }\n\n    componentDidMount() {\n        const { postIndex, descriptions, isAtHome } = this.props;\n        const renderedDescriptions = isAtHome\n            ? descriptions.slice(0, 1)\n            : descriptions;\n        renderedDescriptions.forEach((descriptions, i) => {\n            if (isAtHome) {\n                document.getElementsByClassName(`p-text-${postIndex}`)[i].innerHTML = markupFinderInstance.charInterpreter(descriptions);\n            } else {\n                document.getElementsByClassName('p-text')[i].innerHTML = markupFinderInstance.charInterpreter(descriptions);\n            }\n        });\n    }\n};\n\nexport default Descriptions;\n","/**\n * This file describes the data structure of all technical or any other type of posts\n * @object posts\n * @prop {array} tech_posts - technical posts\n * @prop {string} title - post title\n * @prop {string} published_on - post published date\n * @prop {array} descriptions - multiline post descriptions\n * @prop {array} steps - chronologically ordered list\n * @prop {string} text - instruction texts of each step\n * @prop {string} media_type - img|code|audio|video|ppt - media type to be rendered after each step\n * @prop {string} media_src - location of media data for all media type except for media_type = code which is sourcecode prefilling it\n**/\n\nexport default {\n    tech_posts: [\n        {\n            title: 'How to host a static website on AWS S3',\n            published_on: '30/03/2019',\n            descriptions: [\n                'In this post, I have cut out all the `TL;DRs` (available out there) and listed all the steps, that I followed and think, are very easy and simple to follow to make your website up and running quickly.',\n            ],\n            steps: [\n                {\n                    text: 'Log into [AWS Management Console](https://console.aws.amazon.com/) and search for **S3** by clicking on **Services**. Click on the S3.',\n                    media_type: 'img',\n                    media_src: 'search_s3.png'\n                },\n                {\n                    text: 'Click on **Create bucket** button.',\n                    media_type: 'img',\n                    media_src: 'create_bucket.png'\n                },\n                {\n                    text: 'A Create bucket dialog will be opened. Enter a unique **Bucket name** (the bucket name must be same as your domain name, i.e. bucket name must be `example.com` if domain name is `example.com`). Keep default option selected for **Region** (if you do not have any specific AWS region preference) and leave the **Copy settings from an existing bucket (optional) field blank**.',\n                    media_type: 'img',\n                    media_src: 'create_bucket_dialog.png'\n                },\n                {\n                    text: 'Choose **Next** and keep default values until you reach the **Set permissions** tab. In this, uncheck both the values under **Manage public bucket policies for this bucket** (i.e. 1. Block new public bucket policies (Recommended) 2. Block public and cross-account access if bucket has public policies (Recommended)).',\n                    media_type: 'img',\n                    media_src: 'create_bucket_permissions.png'\n                },\n                {\n                    text: 'On the **Review** tab, verify the settings. You can edit your settings here (if any). Click on **Create bucket** button.',\n                    media_type: 'img',\n                    media_src: 'create_bucket_review.png'\n                },\n                {\n                    text: 'Now, click on the created bucket (let’s say, `example.com`) and open **Properties** tab and choose **Static Website Hosting** card. Choose **Use this bucket to host a website**, type index.html in **Index document** text box and enter **Error document** (optional). Choose **Save**.',\n                    media_type: 'img',\n                    media_src: 'bucket_properties.png'\n                },\n                {\n                    text: 'Write down the **Endpoint**.',\n                    media_type: '',\n                    media_src: ''\n                },\n                {\n                    text: 'Now, open **Permissions** tab and choose **Bucket Policy**.',\n                    media_type: 'img',\n                    media_src: 'bucket_policy.png'\n                },\n                {\n                    text: 'Copy the following bucket policy, and then paste it in the **Bucket Policy Editor**. Replace example.com with the name of your bucket. Choose **Save**.',\n                    media_type: 'code',\n                    media_src: `\n                        {\n                            \"Version\": \"2012-10-17\",\n                            \"Statement\": [\n                                {\n                                    \"Sid\": \"PublicReadGetObject\",\n                                    \"Effect\": \"Allow\",\n                                    \"Principal\": \"*\",\n                                    \"Action\": \"s3:GetObject\",\n                                    \"Resource\": \"arn:aws:s3:::example.com/*\"\n                                }\n                            ]\n                        }\n                    `\n                },\n                {\n                    text: 'Now is the right time to upload your static website. To do this, go back to the main bucket listing. Assuming that you have a ready to upload website in the following directory structure.',\n                    media_type: 'code',\n                    media_src: `\n                        my-app/\n                            |--- css/\n                            |      |--- style.css\n                            |--- images/\n                            |      |--- favicon.ico\n                            |\t   |--- brand.png\n                            |--- index.html    \n                    `\n                },\n                {\n                    text: 'Click on the **Upload** button. Drag and drop or select “Add files”, and add the entire static website directory. Then, click **Upload** button to upload the files.',\n                    media_type: 'img',\n                    media_src: 'sw_upload_files.png'\n                },\n                {\n                    text: 'Once the upload is done, validate your website by typing `example.com` on the browser. The content of your static website will be loaded from the **S3 bucket**.',\n                    media_type: '',\n                    media_src: ''\n                },\n                {\n                    text: 'If you are worried about charges for the services used for your application, you can read more about [S3 Pricing](https://aws.amazon.com/s3/pricing/) and [Route53 Pricing](https://aws.amazon.com/route53/pricing/).',\n                    media_type: '',\n                    media_src: ''\n                },\n            ]\n        },\n        {\n            title: 'How to migrate a domain to Amazon Route53',\n            published_on: '31/03/2019',\n            descriptions: [\n                'This post solves the million’s query of how to migrate a domain registered with [Godaddy](https://in.godaddy.com/) to [Amazon Route53](https://console.aws.amazon.com/route53/). So here, we will use a freshly registered domain so that all the requests to the said domain would resolve to Route53 which is pointing to [Amazon S3](https://console.aws.amazon.com/s3/) bucket where a static website is hosted.',\n                'For your convenience, I would suggest you keep at least two browser tabs opened for Amazon Route53 and Godaddy because we will be frequently switching the tabs back and forth during the whole process.'\n            ],\n            steps: [\n                {\n                    text: 'Log into [AWS Management Console](https://console.aws.amazon.com/) and search for **Route53** on the landing page. Click on the service name.',\n                    media_type: 'img',\n                    media_src: 'search_route53.png'\n                },\n                {\n                    text: 'Click on the **Get Started Now** under the **DNS Management section**.',\n                    media_type: 'img',\n                    media_src: 'route53_get_started.png'\n                },\n                {\n                    text: 'Click on the **Create Hosted Zone** button.',\n                    media_type: 'img',\n                    media_src: 'create_hosted_zone.png'\n                },\n                {\n                    text: 'A form dialog will show up on the right panel. Enter your domain name (i.e. without www) and an optional description. Keep the `Public Hosted Zone` selected. Click on the **Create** button.',\n                    media_type: 'img',\n                    media_src: 'create_hosted_zone_pane.png'\n                },\n                {\n                    text: 'Once create is successful, you will see the zone details, `NS` and `SOA` record set. Explore various [DNS record set types](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html).',\n                    media_type: 'img',\n                    media_src: 'ns_soa_records.png'\n                },\n                {\n                    text: 'Now is the time to add the record sets from Godaddy to this hosted zone. So, open a new browser tab and login to [Godaddy](https://in.godaddy.com/), click on your username to see **Manage Domains** option, click on it to go to domains listing. Then, click on the triple context menu and then, click on Manage DNS under the domain name that you want to move.',\n                    media_type: 'img',\n                    media_src: 'manage_dns.png'\n                },\n                {\n                    text: 'Go to **Advanced Features** section by scrolling all the way down. Click on the link that says **Export Zone File (Unix)**.',\n                    media_type: 'img',\n                    media_src: 'advanced_features.png'\n                },\n                {\n                    text: 'Check that a file `your_domain_name.txt` has been downloaded. Open that file any text editor.',\n                    media_type: '',\n                    media_src: ''\n                },\n                {\n                    text: 'Now, go back to the **Route53** page and click on the **Import Zone File** button. A form dialog will show up on the right panel. Copy and paste the contents of the `your_domain_name.txt` file in the form and click **Import** button.',\n                    media_type: '',\n                    media_src: ''\n                },\n                {\n                    text: 'Click on the refresh button or just refresh your browser to see the imported record sets in the hosted zone. These record sets have been imported from the Godaddy zone file.',\n                    media_type: 'img',\n                    media_src: 'refresh_records.png'\n                },\n                {\n                    text: 'Now, go back to Godaddy page to update **Name Servers**. Go to **Nameservers** section just above the Advanced Features.',\n                    media_type: 'img',\n                    media_src: 'godaddy_nameservers.png'\n                },\n                {\n                    text: 'Click on the **Change** button.',\n                    media_type: '',\n                    media_src: ''\n                },\n                {\n                    text: 'Select the **Custom** option.',\n                    media_type: 'img',\n                    media_src: 'godaddy_custom.png'\n                },\n                {\n                    text: 'Go back to the **Route53** page, click on the **Back to Hosted Zones**, click on the radio button on the left of your hosted zone name. A **Hosted Zone Details** will be shown on the right. Notice the **Name Servers** listed (i.e. 4 Nameservers).',\n                    media_type: 'img',\n                    media_src: 'hosted_zone_nameservers.png'\n                },\n                {\n                    text: 'Copy and paste the **Name Servers** as listed one by one in the Godaddy custom list. Add two more rows by clicking on the **Add Nameserver** button. Then, click **Save**.',\n                    media_type: 'img',\n                    media_src: 'custom_nameservers.png'\n                },\n                {\n                    text: 'Go back to the **Route53** page, click on the **Services** button and search for **S3**. Then, select the service name.',\n                    media_type: 'img',\n                    media_src: 'search_s3.png'\n                },\n                {\n                    text: 'Click on the S3 bucket name with your domain name. Then, select **Properties** tab.',\n                    media_type: 'img',\n                    media_src: 'bucket_properties.png'\n                },\n                {\n                    text: 'Click on the **Static website hosting** card and copy the link given in **Endpoint**.',\n                    media_type: '',\n                    media_src: ''\n                },\n                {\n                    text: 'Go back to **Route53** page and select your hosted zone name. From the record sets, choose the one with **Type A**. Edit Record Set form panel will be opened on the right.',\n                    media_type: 'img',\n                    media_src: 'edit_typeA_record.png'\n                },\n                {\n                    text: 'Change **Alias** to **Yes**.',\n                    media_type: '',\n                    media_src: ''\n                },\n                {\n                    text: 'Paste the link copied in step #18 in **Alias Target** field. Then, click on the **Save Record Set**.',\n                    media_type: '',\n                    media_src: ''\n                },\n                {\n                    text: 'That’s all! Wait for few minutes. Meanwhile, you can perform a DNS lookup for the availability of the name servers at <link www.whatsmydns.net />. Also, you can try entering your domain name in the browser and see if it shows the correct content. You should see your website up and running (if everything is done correctly).',\n                    media_type: '',\n                    media_src: ''\n                },\n                {\n                    text: 'If you are worried about charges for the services used for your application, you can read more about [S3 Pricing](https://aws.amazon.com/s3/pricing/) and [Route53 Pricing](https://aws.amazon.com/route53/pricing/).',\n                    media_type: '',\n                    media_src: ''\n                },\n            ]\n        }\n    ],\n};\n","import React, { Component } from 'react';\nimport ContentLayout from '../ContentLayout/ContentLayout.jsx';\nimport Footer from '../Footer/Footer';\nimport Title from '../Title/Title.jsx';\nimport HLine from '../HLine/HLine.jsx';\nimport Descriptions from '../Descriptions/Descriptions.jsx';\nimport posts_data from '../../data';\nimport './Home.scss';\n\nclass Home extends Component {\n    render() {\n        return (\n            <ContentLayout>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        {\n                            posts_data.tech_posts.map(({ title, published_on, descriptions }, i) => {\n                                const redirectedURL = `/${published_on.split('/').reverse().join('/')}/${title.split(' ').join('-')}`;\n\n                                return (\n                                    <div className=\"row mb-30\" key={published_on}>\n                                        <div className=\"col\">\n                                            <Title\n                                                title={title}\n                                                publishedOn={published_on}\n                                                isAtHome\n                                            />\n                                            <Descriptions\n                                                descriptions={descriptions}\n                                                redirectedURL={redirectedURL}\n                                                postIndex={i}\n                                                isAtHome\n                                            />\n                                            {(i !== posts_data.tech_posts.length - 1) ? <HLine /> : null}\n                                        </div>\n                                    </div>\n                                );\n                            })\n                        }\n                    </div>\n                </div>\n                <Footer />\n            </ContentLayout>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\n\nexport default props => {\n    const { mediaSrc, altText } = props;\n\n    return (\n        <div className=\"step__wrapper\">\n            <img className=\"step__img\" src={require(`../../assets/images/${mediaSrc}`)} alt={altText} />\n        </div>\n    );\n};\n","import React from 'react';\n\nexport default props => {\n    const { mediaSrc } = props;\n\n    return (\n        <div className=\"step__wrapper\">\n            <pre className=\"step__code\"><code>{mediaSrc}</code></pre>\n        </div>\n    );\n};\n","import React, { Component } from 'react';\nimport MarkupFinder from '../../assets/utils/markupFinder';\nimport Image from '../Image/Image.jsx';\nimport PreCode from '../PreCode/PreCode.jsx';\nimport './Step.scss';\n\nconst markupFinderInstance = new MarkupFinder();\n\nclass Step extends Component {\n    render() {\n        const { media_type, media_src } = this.props.step;\n        const altText = (media_type !== 'code') ? media_src.substring(0, media_src.indexOf('.')).split('_').join(' ') : '';\n\n        return (\n            <li className=\"step\">\n                <span className=\"step__text\" />\n                {\n                    (media_type === 'img')\n                        ? <Image mediaSrc={media_src} alt={altText} />\n                        : (media_type === 'code')\n                            ? <PreCode mediaSrc={media_src} />\n                            : null\n\n                }\n            </li>\n        );\n    }\n\n    componentDidMount() {\n        document.getElementsByClassName('step__text')[this.props.stepIndex].innerHTML = markupFinderInstance.charInterpreter(this.props.step.text);\n    }\n};\n\nexport default Step;\n","import React from 'react';\nimport Step from '../Step/Step.jsx';\nimport './Steps.scss';\n\nexport default props => {\n    return (\n        <ol className=\"steps\">\n            {props.steps.map((step, i) => <Step key={i} step={step} stepIndex={i} />)}\n        </ol>\n    );\n};\n","import React from 'react';\nimport ContentLayout from '../ContentLayout/ContentLayout.jsx';\nimport Footer from '../Footer/Footer';\nimport Title from '../Title/Title.jsx';\nimport Descriptions from '../Descriptions/Descriptions.jsx';\nimport Steps from '../Steps/Steps.jsx';\n\nexport default props => {\n    const { title, publishedOn, descriptions, steps } = props;\n\n    return (\n        <ContentLayout>\n            <Title title={title} publishedOn={publishedOn} />\n            <Descriptions descriptions={descriptions} />\n            <Steps steps={steps} />\n            <Footer />\n        </ContentLayout>\n    );\n};\n","import React from 'react';\nimport Content from '../Content/Content.jsx';\nimport posts_data from '../../data';\n\nconst PostsMaster = (() => {\n    let postComponents = {};\n    posts_data.tech_posts.forEach(tech_post => {\n        const publishedOn = tech_post.published_on.split('/').join('');\n        postComponents = {\n            ...postComponents,\n            [`Post${publishedOn}`]: props => {\n                const { title, published_on, descriptions, steps } = props.postData;\n\n                return (\n                    <Content\n                        title={title}\n                        publishedOn={published_on}\n                        descriptions={descriptions}\n                        steps={steps}\n                    />\n                );\n            }\n        };\n    });\n\n    return postComponents;\n})();\n\nexport default PostsMaster;\n","import React, { Component } from 'react';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch\n} from 'react-router-dom';\nimport Header from '../Header/Header';\nimport NotFound from '../NotFound/NotFound';\nimport Home from '../Home/Home';\nimport PostsMaster from '../PostsMaster';\nimport posts_data from '../../data';\nimport './App.scss';\n\nclass App extends Component {\n    render() {\n        const { tech_posts } = posts_data;\n        const { Post30032019, Post31032019 } = PostsMaster;\n\n        return (\n            <div className=\"container prl-0\">\n                <Header />\n                <Router>\n                    <Switch>\n                        <Route path=\"/\" exact component={Home} />\n                        {\n                            tech_posts.map(tech_post => {\n                                const { title, published_on } = tech_post;\n                                const redirectedURL = `/${published_on.split('/').reverse().join('/')}/${title.split(' ').join('-')}`;\n                                const publishedOn = published_on.split('/').join('');\n\n                                return (\n                                    <Route\n                                        key={published_on}\n                                        path={redirectedURL}\n                                        exact\n                                        render={props => (\n                                            (publishedOn === '30032019')\n                                                ? <Post30032019 postData={tech_post} />\n                                                : (publishedOn === '31032019')\n                                                    ? <Post31032019 postData={tech_post} />\n                                                    : <NotFound />\n                                        )}\n                                    />\n                                );\n                            })\n                        }\n                        <Route component={NotFound} />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}